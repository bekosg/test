{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BekosG-df"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oyf_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oyf_20230525"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "MainControlTable_Ioannis"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_oyf_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_oyf_20230525"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_q8s_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_q8s_20230525"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "MainControlTable_Yannis"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_q8s_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_q8s_20230525"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_qr0_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_qr0_20230523"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": "MainControlTable_George"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_qr0_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_qr0_20230523"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_svt_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_svt_20230522"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": "MainControlTable_svt"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_svt_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_svt_20230522"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_v1n_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_v1n_20230523"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": "MainControlTable_George"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_v1n_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_v1n_20230523"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_w3c_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_w3c_20230529"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": "MainControlTable_ROCK"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_w3c_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_w3c_20230529"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_ypv_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_ypv_20230530"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "MainControlTable_LALA"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_ypv_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_ypv_20230530"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRMProdCopyTask_97a_ControlDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SRMProdCopyTask_97a_20230606"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": "MainControlTable_TestProd"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRMProdCopyTask_97a_DestinationDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SRMProdCopyTask_97a_20230606"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerFullLoadTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ecdc_ecdc_permissiondefinition_ecdc_securityid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ecdc_permissiondefinitionid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ecdc_securitygroupid",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ecdc_ecdc_permissiondefinition_ecdc_security"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC_SQL08",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_bal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_bal",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "ecdc_country"
							},
							{
								"name": "Destination",
								"value": ".ecdc_country"
							},
							{
								"name": "LastExecution",
								"value": "2023-05-15"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DynamicsSource",
								"query": {
									"value": "<fetch>\n<entity name=\"ecdc_country\">\n<filter type=\"or\">\n<condition attribute=\"createdon\" operator=\"on-or-after\" value=\"2023-03-22\" />\n<condition attribute=\"modifiedon\" operator=\"on-or-after\" value=\"2023-03-24\" />\n</filter>\n</entity>\n</fetch>",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ecdc_countryid"
									]
								},
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "createdby",
											"type": "Guid"
										},
										"sink": {
											"name": "createdby",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "createdbyname",
											"type": "String"
										},
										"sink": {
											"name": "createdbyname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "createdbyyominame",
											"type": "String"
										},
										"sink": {
											"name": "createdbyyominame",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "createdon",
											"type": "DateTime"
										},
										"sink": {
											"name": "createdon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "createdonbehalfby",
											"type": "Guid"
										},
										"sink": {
											"name": "createdonbehalfby",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "createdonbehalfbyname",
											"type": "String"
										},
										"sink": {
											"name": "createdonbehalfbyname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "createdonbehalfbyyominame",
											"type": "String"
										},
										"sink": {
											"name": "createdonbehalfbyyominame",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ecdc_countrycode",
											"type": "String"
										},
										"sink": {
											"name": "ecdc_countrycode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ecdc_countryid",
											"type": "Guid"
										},
										"sink": {
											"name": "ecdc_countryid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ecdc_eea",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_eea",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_efta",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_efta",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_euenlargementpolicycountrycategory",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_euenlargementpolicycountrycategory",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_eumember",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_eumember",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_eumembership",
											"type": "Int32"
										},
										"sink": {
											"name": "ecdc_eumembership",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ecdc_haspostalcodes",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_haspostalcodes",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_name",
											"type": "String"
										},
										"sink": {
											"name": "ecdc_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ecdc_officiallanguages",
											"type": "String"
										},
										"sink": {
											"name": "ecdc_officiallanguages",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ecdc_relatedtomedipietmodule",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_relatedtomedipietmodule",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ecdc_westernbalkanscountry",
											"type": "Boolean"
										},
										"sink": {
											"name": "ecdc_westernbalkanscountry",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "importsequencenumber",
											"type": "Int32"
										},
										"sink": {
											"name": "importsequencenumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "modifiedby",
											"type": "Guid"
										},
										"sink": {
											"name": "modifiedby",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "modifiedbyname",
											"type": "String"
										},
										"sink": {
											"name": "modifiedbyname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "modifiedbyyominame",
											"type": "String"
										},
										"sink": {
											"name": "modifiedbyyominame",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "modifiedon",
											"type": "DateTime"
										},
										"sink": {
											"name": "modifiedon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "modifiedonbehalfby",
											"type": "Guid"
										},
										"sink": {
											"name": "modifiedonbehalfby",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "modifiedonbehalfbyname",
											"type": "String"
										},
										"sink": {
											"name": "modifiedonbehalfbyname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "modifiedonbehalfbyyominame",
											"type": "String"
										},
										"sink": {
											"name": "modifiedonbehalfbyyominame",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "overriddencreatedon",
											"type": "DateTime"
										},
										"sink": {
											"name": "overriddencreatedon",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ownerid",
											"type": "Guid"
										},
										"sink": {
											"name": "ownerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "owneridname",
											"type": "String"
										},
										"sink": {
											"name": "owneridname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "owneridtype",
											"type": "String"
										},
										"sink": {
											"name": "owneridtype",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "owneridyominame",
											"type": "String"
										},
										"sink": {
											"name": "owneridyominame",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "owningbusinessunit",
											"type": "Guid"
										},
										"sink": {
											"name": "owningbusinessunit",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "owningbusinessunitname",
											"type": "String"
										},
										"sink": {
											"name": "owningbusinessunitname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "owningteam",
											"type": "Guid"
										},
										"sink": {
											"name": "owningteam",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "owninguser",
											"type": "Guid"
										},
										"sink": {
											"name": "owninguser",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "Int32"
										},
										"sink": {
											"name": "statecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "statuscode",
											"type": "Int32"
										},
										"sink": {
											"name": "statuscode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "timezoneruleversionnumber",
											"type": "Int32"
										},
										"sink": {
											"name": "timezoneruleversionnumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "utcconversiontimezonecode",
											"type": "Int32"
										},
										"sink": {
											"name": "utcconversiontimezonecode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "versionnumber",
											"type": "Int64"
										},
										"sink": {
											"name": "versionnumber",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_bal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_bal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-16T10:04:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MetadataDrivenCopyTask_ypv_BottomLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will copy objects from one group. The objects belonging to this group will be copied parallelly.",
				"activities": [
					{
						"name": "ListObjectsFromOneGroup",
						"description": "List objects from one group and iterate each of them to downstream activities",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ObjectsPerGroupToCopy",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "RouteJobsBasedOnLoadingBehavior",
									"description": "Check the loading behavior for each object if it requires full load or incremental load. If it is Default or FullLoad case, do full load. If it is DeltaLoad case, do incremental load.",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@json(item().DataLoadingBehaviorSettings).dataLoadingBehavior",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "FullLoad",
												"activities": [
													{
														"name": "FullLoadOneObject",
														"description": "Take a full snapshot on this object and copy it to the destination",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Stored procedure1",
																"dependencyConditions": [
																	"Completed"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": "Source",
																"value": "@{json(item().SourceObjectSettings).entityName}"
															},
															{
																"name": "Destination",
																"value": "@{json(item().SinkObjectSettings).schema}.@{json(item().SinkObjectSettings).table}"
															}
														],
														"typeProperties": {
															"source": {
																"type": "DynamicsSource"
															},
															"sink": {
																"type": "SqlServerSink",
																"preCopyScript": {
																	"value": "@json(item().CopySinkSettings).preCopyScript",
																	"type": "Expression"
																},
																"writeBehavior": {
																	"value": "@json(item().CopySinkSettings).writeBehavior",
																	"type": "Expression"
																},
																"sqlWriterUseTableLock": {
																	"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
																	"type": "Expression"
																},
																"upsertSettings": {
																	"value": "@json(item().CopySinkSettings).upsertSettings",
																	"type": "Expression"
																},
																"tableOption": {
																	"value": "@json(item().CopySinkSettings).tableOption",
																	"type": "Expression"
																}
															},
															"enableStaging": false,
															"validateDataConsistency": false,
															"translator": {
																"value": "@json(item().CopyActivitySettings).translator",
																"type": "Expression"
															}
														},
														"inputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_ypv_SourceDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_entityName": {
																		"value": "@json(item().SourceObjectSettings).entityName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_ypv_DestinationDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_schema": {
																		"value": "@json(item().SinkObjectSettings).schema",
																		"type": "Expression"
																	},
																	"cw_table": {
																		"value": "@json(item().SinkObjectSettings).table",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Stored procedure1",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[dbo].[sp_Delete_Table_Data]",
															"storedProcedureParameters": {
																"table_name": {
																	"value": {
																		"value": "@json(item().SinkObjectSettings).table",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ECDC_SQL08",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "DeltaLoad",
												"activities": [
													{
														"name": "DeltaLoadOneObject",
														"description": "Copy the changed data only from last time via comparing the value in watermark column to identify changes.",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": "Source",
																"value": "@{json(item().SourceObjectSettings).entityName}"
															},
															{
																"name": "Destination",
																"value": "@{json(item().SinkObjectSettings).schema}.@{json(item().SinkObjectSettings).table}"
															}
														],
														"typeProperties": {
															"source": {
																"type": "DynamicsSource",
																"query": {
																	"value": "<fetch>\n<entity name=\"@{json(item().SourceObjectSettings).entityName}\">\n<all-attributes />\n<filter type=\"and\">\n<condition attribute =\"@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}\" operator=\"on-or-after\" value=\"@{json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue}\"/>\n</filter>\n</entity>\n</fetch>\n",
																	"type": "Expression"
																}
															},
															"sink": {
																"type": "SqlServerSink",
																"preCopyScript": {
																	"value": "@json(item().CopySinkSettings).preCopyScript",
																	"type": "Expression"
																},
																"writeBehavior": {
																	"value": "@json(item().CopySinkSettings).writeBehavior",
																	"type": "Expression"
																},
																"sqlWriterUseTableLock": {
																	"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
																	"type": "Expression"
																},
																"upsertSettings": {
																	"value": "@json(item().CopySinkSettings).upsertSettings",
																	"type": "Expression"
																},
																"tableOption": {
																	"value": "@json(item().CopySinkSettings).tableOption",
																	"type": "Expression"
																}
															},
															"enableStaging": false,
															"validateDataConsistency": false,
															"translator": {
																"value": "@json(item().CopyActivitySettings).translator",
																"type": "Expression"
															}
														},
														"inputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_ypv_SourceDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_entityName": {
																		"value": "@json(item().SourceObjectSettings).entityName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "MetadataDrivenCopyTask_ypv_DestinationDS",
																"type": "DatasetReference",
																"parameters": {
																	"cw_schema": {
																		"value": "@json(item().SinkObjectSettings).schema",
																		"type": "Expression"
																	},
																	"cw_table": {
																		"value": "@json(item().SinkObjectSettings).table",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "UpdateWatermarkColumnValue",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "DeltaLoadOneObject",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[dbo].[UpdateWatermarkColumnValue_ypv]",
															"storedProcedureParameters": {
																"Id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																},
																"watermarkColumnStartValue": {
																	"value": {
																		"value": "@utcnow()",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ECDC_SQL08",
															"type": "LinkedServiceReference"
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "DefaultFullLoadOneObject",
												"description": "Take a full snapshot on this object and copy it to the destination",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{json(item().SourceObjectSettings).entityName}"
													},
													{
														"name": "Destination",
														"value": "@{json(item().SinkObjectSettings).schema}.@{json(item().SinkObjectSettings).table}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "DynamicsSource"
													},
													"sink": {
														"type": "SqlServerSink",
														"preCopyScript": {
															"value": "@json(item().CopySinkSettings).preCopyScript",
															"type": "Expression"
														},
														"writeBehavior": {
															"value": "@json(item().CopySinkSettings).writeBehavior",
															"type": "Expression"
														},
														"sqlWriterUseTableLock": {
															"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
															"type": "Expression"
														},
														"upsertSettings": {
															"value": "@json(item().CopySinkSettings).upsertSettings",
															"type": "Expression"
														},
														"tableOption": {
															"value": "@json(item().CopySinkSettings).tableOption",
															"type": "Expression"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"translator": {
														"value": "@json(item().CopyActivitySettings).translator",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_ypv_SourceDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_entityName": {
																"value": "@json(item().SourceObjectSettings).entityName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_ypv_DestinationDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_schema": {
																"value": "@json(item().SinkObjectSettings).schema",
																"type": "Expression"
															},
															"cw_table": {
																"value": "@json(item().SinkObjectSettings).table",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ObjectsPerGroupToCopy": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "MetadataDrivenCopyTask_ypv_20230530"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-30T10:31:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MetadataDrivenCopyTask_ypv_DestinationDS')]"
			]
		}
	]
}